---
import "../styles/tags.css";

import { type CollectionEntry, getEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";

type Blog = CollectionEntry<"blog">;
type Tag = CollectionEntry<"tags">;

const props: Blog = Astro.props as Blog;
const { title, description, pubDate, updatedDate, heroImage, project, tags } =
  props.data;

const projectDetails = project && (await getEntry("projects", project.slug));
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} image={heroImage} />
    <style>
      main {
        width: calc(100% - 2em);
        max-width: 100%;
        margin: 0;
      }
      .hero-image {
        width: 100%;
      }
      .hero-image img {
        display: block;
        margin: 0 auto;
        border-radius: 12px;
        box-shadow: var(--bg2);
      }
      .prose {
        width: 720px;
        max-width: calc(100% - 0.5em);
        margin: auto;
        padding: 1em 0em;
        color: var(--fg0);
      }
      .title {
        margin-bottom: 1em;
        padding: 1em 0;
        text-align: center;
        line-height: 1;
      }
      .title h1 {
        margin: 0 0 0.5em 0;
      }
      .date {
        margin-bottom: 0.5em;
        color: var(--fg3);
      }
      .last-updated-on {
        font-style: italic;
      }
      li.project-name a {
        display: inline-block;
        background-color: var(--orange2);
        color: var(--bg);
        padding: 0 0.5rem;
        border-radius: 12px;
        transition: background-color var(--animation);
        line-height: 1.7;
        color: var(--bg);
        text-decoration: none;
      }
      li.project-name a:hover,
      li.project-name a:focus {
        background-color: var(--green2);
      }
    </style>
  </head>

  <body>
    <Header />
    <main id="content-start">
      <article>
        <div class="hero-image">
          {
            heroImage && (
              <img width={1020} height={510} src={heroImage} alt="" />
            )
          }
        </div>
        <div class="prose">
          <div class="title">
            <div class="date">
              <FormattedDate date={pubDate} />
              {
                updatedDate && (
                  <div class="last-updated-on">
                    Last updated on <FormattedDate date={updatedDate} />
                  </div>
                )
              }
            </div>
            <h1>{title}</h1>
            <ul class="tag-list">
              {
                projectDetails && (
                  <>
                    <li class="project-name">
                      <a
                        aria-label={`Go to ${projectDetails.data.name} project`}
                        href={`/projects/${project.slug}`}
                      >
                        {projectDetails.data.name}
                      </a>
                    </li>
                  </>
                )
              }
              {
                tags &&
                  tags.map(async (t) => {
                    const tag: Tag = await getEntry("tags", t.id);
                    return (
                      <li>
                        <a aria-label={`See posts tagged ${tag.data.name}`} href=`/tags/${t.id}`>
                          <span aria-hidden="true">#{tag.data.name}</span>
                        </a>
                      </li>
                    );
                  })
              }
            </ul>
            <hr />
          </div>
          <slot />
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html>
