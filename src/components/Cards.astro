---
import { type CollectionEntry, getEntry } from "astro:content";
import FormattedDate from "./FormattedDate.astro";

type Blog = CollectionEntry<"blog">;
type Tag = CollectionEntry<"tags">;

const posts: Blog[] = Astro.props.posts;
---

<style>
  ul {
    --animation: 0.2s ease;
    list-style-type: none;
    margin: 0;
    padding: 0;
  }

  ul a {
    display: block;
    padding: 2em 1em;
    margin: 1em 0;
    border-radius: 12px;
    background: no-repeat center;
    background-size: 100%;
    position: relative;
    text-decoration: none;
    transition: background-size var(--animation);
  }

  .title,
  .date,
  .tag-list li {
    color: var(--orange2);
    position: relative;
    z-index: 10;
    transition: color var(--animation);
    margin: 0;
  }

  .tag-list li {
    display: inline;
    font-style: italic;
  }

  .tag-list li::after {
    content: " ";
  }

  .title {
    line-height: 1;
  }

  a:hover .title,
  a:hover .date,
  a:hover .tag-list li {
    color: var(--green2);
  }

  a:focus .title,
  a:focus .date,
  a:focus .tag-list li {
    color: var(--green2);
  }

  ul a:focus {
    background-size: 105%;
  }

  ul a:hover {
    background-size: 105%;
  }

  .mask {
    border-radius: 12px;
    position: absolute;
    top: 0;
    left: 0;
    background-color: var(--bg0);
    opacity: 0.75;
    height: 100%;
    width: 100%;
    transition: opacity var(--animation);
  }

  a:focus .mask,
  a:hover .mask {
    opacity: 0.5;
  }

  @media (prefers-color-scheme: light) {
    a:focus .mask,
    a:hover .mask {
      opacity: 0.85;
    }
  }
</style>
<section>
  <ul>
    {
      posts.map(async (post: Blog) => {
        return (
          <li>
            <a
              style={
                post.data.heroImage && {
                  "background-image": `url(${post.data.heroImage})`,
                }
              }
              href={`/blog/${post.slug}/`}
            >
              <h3 class="title">{post.data.title}</h3>
              <p class="date">
                <FormattedDate date={post.data.pubDate} />
              </p>
              <ul class="tag-list">
                {post.data.tags &&
                  post.data.tags.map(async (g) => {
                    const tag: Tag = await getEntry("tags", g.id);
                    return <li>#{tag.data.name}</li>;
                  })}
              </ul>
              <div class="mask" />
            </a>
          </li>
        );
      })
    }
  </ul>
</section>
